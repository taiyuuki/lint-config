module.exports = {
  extends: ['plugin:vue/vue3-recommended', '@taiyuuki/eslint-config-ts'],
  overrides: [
    {
      files: ['*.vue'],
      parser: 'vue-eslint-parser',
      parserOptions: { parser: '@typescript-eslint/parser' },
    },
  ],
  settings: {
    'import/resolver': {
      alias: {
        map: [
          ['@', './src'],
          ['src', './src'],
          ['components', './src/components'],
          ['layouts', './src/layouts'],
          ['pages', './src/pages'],
          ['assets', './src/assets'],
          ['boot', './src/boot'],
          ['stores', './src/stores'],
          ['router', './src/router'],
        ],
        extensions: ['.tsx', '.ts', '.jsx', '.js', '.vue'],
      },
    },
  },
  rules: {
    'vue/multi-word-component-names': 'off',
    'vue/component-definition-name-casing': 'off',
    'vue/component-options-name-casing': 'off',
    'vue/component-name-in-template-casing': 'off',
    'vue/component-tags-order': ['error', { order: ['script', 'template', 'style'] }],
    'vue/block-tag-newline': ['error', {
      singleline: 'always',
      multiline: 'always',
    }],
    'vue/define-macros-order': ['error', { order: ['defineProps', 'defineEmits'] }],
    'vue/html-comment-content-spacing': ['error', 'always', { exceptions: ['-'] }],
    'vue/no-restricted-v-bind': ['error', '/^v-/'],
    'vue/no-useless-v-bind': 'error',
    'vue/no-v-text-v-html-on-component': 'error',
    'vue/padding-line-between-blocks': ['error', 'always'],
    'vue/prefer-separate-static-class': 'error',

    // stylistic
    'vue/array-bracket-spacing': ['warn', 'never'],
    'vue/arrow-spacing': ['warn', { before: true, after: true }],
    'vue/block-spacing': ['warn', 'always'],
    'vue/brace-style': ['warn', 'stroustrup', { allowSingleLine: true }],
    'vue/comma-dangle': ['warn', 'always-multiline'],
    'vue/comma-spacing': ['warn', { before: false, after: true }],
    'vue/comma-style': ['warn', 'last'],
    'vue/dot-location': ['warn', 'property'],
    'vue/dot-notation': ['warn', { allowKeywords: true }],
    'vue/eqeqeq': ['warn', 'smart'],
    'vue/key-spacing': ['warn', { beforeColon: false, afterColon: true }],
    'vue/keyword-spacing': ['warn', { before: true, after: true }],
    'vue/no-constant-condition': 'warn',
    'vue/no-empty-pattern': 'warn',
    'vue/no-extra-parens': ['warn', 'functions'],
    'vue/no-irregular-whitespace': 'warn',
    'vue/no-loss-of-precision': 'warn',
    'vue/no-restricted-syntax': [
      'warn',
      'DebuggerStatement',
      'LabeledStatement',
      'WithStatement',
    ],
    'vue/no-sparse-arrays': 'warn',
    'vue/object-curly-newline': ['warn', { multiline: true, consistent: true }],
    'vue/object-curly-spacing': ['warn', 'always'],
    'vue/object-property-newline': ['warn', { allowMultiplePropertiesPerLine: true }],
    'vue/object-shorthand': [
      'warn',
      'always',
      {
        ignoreConstructors: false,
        avoidQuotes: true,
      },
    ],
    'vue/operator-linebreak': ['warn', 'before'],
    'vue/prefer-template': 'warn',
    'vue/quote-props': ['warn', 'consistent-as-needed'],
    'vue/space-in-parens': ['warn', 'never'],
    'vue/space-infix-ops': 'warn',
    'vue/space-unary-ops': ['warn', { words: true, nonwords: false }],
    'vue/template-curly-spacing': 'warn',
  },
}